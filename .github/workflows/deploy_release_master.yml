name: Deploy & Release - Master
on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: "Version of the release"
        required: true
        default: "1.0.0"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Build and Test with Maven
        run: mvn --batch-mode --update-snapshots test;

  create_draft_release:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Create a Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.releaseVersion }}
          release_name: Release ${{ github.event.inputs.releaseVersion }}
          body_path: "RELEASE_NOTE"
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_version_build:
    needs: create_draft_release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Set up Maven Settings for deploy
        run: |
          git config user.name "GitHub Actions";
          git config user.email "actions@github.com";
          mvn versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }} -DgenerateBackupPoms=false;
          mvn versions:set-property -Dproperty=project.version -DnewVersion=${{ github.event.inputs.releaseVersion }};
          git add pom.xml;
          git commit -m "Version ${{ github.event.inputs.releaseVersion }}";

      - name: Build Jar file
        run: |
          mvn -B package;
          mv target/Test-CI-CD-${{ github.event.inputs.releaseVersion }}.jar Test-CI-CD.jar;

      - name: Publish jar
        run: |
          hub release edit -a Test-CI-CD.jar -m "" "${{ github.event.inputs.releaseVersion }}";
          git push;
          hub release edit --draft=false -m "" "${{ github.event.inputs.releaseVersion }}";
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update_develop:
    needs: update_version_build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: develop

      - name: Update develop
        run: |
          git merge master;
          git push;
  make_pr_develop:
    needs: update_develop
    runs-on: ubuntu-latest
    if: always() && (needs.update_develop.result == 'failure')
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v2
        with:
          ref: master
      - name: Make a PR
        uses: repo-sync/pull-request@v2.6
        with:
          source_branch: develop
          destination_branch: master
          pr_title: "{{ github.event.inputs.releaseVersion }}: Master => Develop"
          pr_body: "Error while merging master to develop. Manual action should be done."
          pr_assignee: 0ddlyoko
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
